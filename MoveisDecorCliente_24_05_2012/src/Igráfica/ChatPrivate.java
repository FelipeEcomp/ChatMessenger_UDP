/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChatPrivate.java
 *
 * Created on 30/04/2012, 15:16:02
 */
package Igráfica;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Video.EmissorRTPAudio;
import Video.EmissorRTPVideo;
import Video.ReceptorRTPAudio;
import Video.ReceptorRTPVideo;
import moveisdecor.Tabela;
import moveisdecor.Unicast;
public class ChatPrivate extends javax.swing.JFrame {

    grafLogin log = new grafLogin();
    Unicast uni = new Unicast(this);
    private String IP; //colocar ip do outro cara
    private String login;
    private static boolean Confirmacao;
    private String conversa;
    private String[] IP1 = new String[2];

    /** Creates new form ChatPrivate */
    public ChatPrivate(int selected, Tabela tabela) {
        IP1 = (String[]) Tabela.getListaIPs()[selected];
        IP = IP1[1];
        initComponents();
        setLocationRelativeTo(null); // Centraliza Janela
        Chat.setEditable(false);


    }
    
     public ChatPrivate(String ip) {
        
        IP = ip;
        initComponents();
        setLocationRelativeTo(null); // Centraliza Janela
        Chat.setEditable(false);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NomeUser = new javax.swing.JLabel();
        CampoEscrita = new javax.swing.JFormattedTextField();
        enviar = new javax.swing.JButton();
        EnviarArquivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Chat = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        video = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 246, 230));
        jPanel1.setForeground(new java.awt.Color(51, 255, 102));

        NomeUser.setText("Nome do usuario");

        CampoEscrita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoEscritaActionPerformed(evt);
            }
        });

        enviar.setText("Enviar");
        enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });

        EnviarArquivo.setText("Enviar Arquivo");
        EnviarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarArquivoActionPerformed(evt);
            }
        });

        Chat.setColumns(20);
        Chat.setRows(5);
        jScrollPane1.setViewportView(Chat);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Igráfica/thiago.jpg"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Igráfica/Felipe e Bia.jpg"))); // NOI18N

        video.setText("Video");
        video.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2)))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NomeUser)
                        .addGap(52, 52, 52)
                        .addComponent(EnviarArquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(video, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CampoEscrita, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NomeUser)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EnviarArquivo)
                        .addComponent(video)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(113, 113, 113)
                        .addComponent(jLabel2)
                        .addContainerGap(95, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CampoEscrita, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed

        String texto = login + ": " + CampoEscrita.getText();
        String hist = Chat.getText();
        Chat.setText(hist + "\n" + texto);
        try {
            uni.UnicastEnvia(texto, IP);
        } catch (Exception ex) {
            Logger.getLogger(ChatPrivate.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_enviarActionPerformed

    private void EnviarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarArquivoActionPerformed
        Arquivo arq;

        try {
            arq = new Arquivo(this);
        } catch (Exception ex) {
            Logger.getLogger(ChatPrivate.class.getName()).log(Level.SEVERE, null, ex);
        }





    }//GEN-LAST:event_EnviarArquivoActionPerformed

    private void videoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoActionPerformed
       /**Configurações do host destino
         * Essa variavel ip tem que ser capaz de receber os ip do host que queremos
         * abrir a sessão de videoconferência emitindo video e audio em portas diferentes
         */
        String ip = IP;
        String portaAudioEmissor = "49152";
        String portaVideoEmissor = "445";
        
        
        EmissorRTPAudio emissorAudio = new EmissorRTPAudio(ip, portaAudioEmissor);
        emissorAudio.start();
        EmissorRTPVideo emissorVideo = new EmissorRTPVideo(ip, portaVideoEmissor);
        emissorVideo.start();
        
        /**Configurações do host de origem, no caso o localhost
         * Essa variavel ip2 tem que ser capaz de receber os ip do localhost, ou seja a nossa maquina
         * recebendo video e audio em portas diferentes
         */
        
        String ip2 = IP;
        String portaAudioReceptor = "49152";
        String portaVideoReceptor = "445";
        
        ReceptorRTPAudio receptorAudio = new ReceptorRTPAudio(ip2, portaAudioReceptor);
        Thread thrAU = new Thread(receptorAudio);
        thrAU.start();
        ReceptorRTPVideo receptorVideo = new ReceptorRTPVideo(ip2, portaVideoReceptor);
        Thread thrVI = new Thread(receptorVideo);
        thrVI.start();
        
        
    }//GEN-LAST:event_videoActionPerformed

    private void CampoEscritaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoEscritaActionPerformed
         String texto = login + ": " + CampoEscrita.getText();
        String hist = Chat.getText();
        Chat.setText(hist + "\n" + texto);
        try {
            uni.UnicastEnvia(texto, IP);
        } catch (Exception ex) {
            Logger.getLogger(ChatPrivate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CampoEscritaActionPerformed

    public void setMsg(String Texto) {
        System.out.println("Mensagem daki: " + Texto);

        String hist = Chat.getText();
        Chat.setText(hist + "\n" + Texto.trim());
        // O método trim() remove os espaços em branco após a string  

    }

    public static boolean getConfirmacao() {
        return Confirmacao;

    }

    public void setIP(String IP) {
        this.IP = IP;
    }

    public String getIP() {
        return IP;
    }

    public void setLogin(String login) {
        this.login = login;
        NomeUser.setText(this.login);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField CampoEscrita;
    private javax.swing.JTextArea Chat;
    private javax.swing.JButton EnviarArquivo;
    private javax.swing.JLabel NomeUser;
    private javax.swing.JButton enviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton video;
    // End of variables declaration//GEN-END:variables
}
